# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
#       Stop all: docker-compose down
#
version: "3.7"

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  ENV: "production"

services:
  app:
    image: server:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    ports:
      - "8000:8000"
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command:
      [
        "serve",
        "--env",
        "production",
        "--hostname",
        "0.0.0.0",
        "--port",
        "8000",
      ]
    volumes:
      - ./privateKey.key:/app/privateKey.key:ro
      - ./privateKey.key.pub:/app/privateKey.key.pub:ro
    depends_on:
      - "psql"
  psql:
    image: postgres:13-alpine
    env_file:
      - database.env
    volumes:
      - database-data:/var/lib/postgresql/data/
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1000.sql
      - ./sql/triggers.sql:/docker-entrypoint-initdb.d/1001.sql
      - ./sql/testData.sql:/docker-entrypoint-initdb.d/9000.sql
    ports:
      - '5433:5432'
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    depends_on: 
      - app
volumes:
  database-data:
